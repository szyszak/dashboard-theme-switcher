{"version":3,"sources":["scripts/theme.js","scripts/script.js"],"names":["light","dark","root","window","document","documentElement","toggle","querySelector","getInitialTheme","persistedTheme","localStorage","getItem","hasPersistedPreference","mediaQueryList","matchMedia","hasMediaQueryPreference","matches","setTheme","newTheme","setItem","checked","currentTheme","Object","entries","key","value","style","setProperty","addEventListener","ev","target"],"mappings":";;ACAA;;;;ADAA,IAAMA,KAAK,GAAG;AACZ,iBAAe,oBADH;AAEZ,kBAAgB,kBAFJ;AAGZ,kBAAgB,kBAHJ;AAIZ,sBAAoB,qBAJR;AAKZ,eAAa,oBALD;AAMZ,sBAAoB,oBANR;AAOZ,oBAAkB,oBAPN;AAQZ,qBAAmB;AARP,CAAd;ACEA,IAAME,IAAI,GAAGC,MAAM,CAACC,QAAP,CAAgBC,eAA7B;AACA,ADQA,ICRMC,ADQAL,IAAI,ECRE,CDQC,ECREG,QAAQ,CAACG,aAAT,CAAuB,SAAvB,CAAf;ADSE,iBAAe,mEADJ;ACNb,ADQE,ICRIC,cDQY,CCRG,GAAG,SAAlBA,ODMO,QCNW,GAAM;AAC5B,ADQA,kBAAgB,oBAHL;ACJX,ADQA,MCRMC,cAAc,EDQA,CCRGN,MAAM,CAACO,YAAP,ADIZ,CCJgCC,OAApB,CAA4B,OAA5B,CAAvB;AACA,ADQA,MCRMC,SDQO,aCRe,GAAG,IDGpB,GCH2BH,cAAP,KAA0B,QAAzD;ADSA,sBAAoB,oBANT;ACDX,ADQA,MCRIG,cDQc,QCRlB,EAA4B,QDCjB;ACAT,ADQF,WCRSH,UDQU,ICRjB;AACD,ADDU,CAAb,ECN8B,CAS5B;;;AACA,MAAMI,cAAc,GAAGV,MAAM,CAACW,UAAP,CAAkB,8BAAlB,CAAvB;AACA,MAAMC,uBAAuB,GAAG,OAAOF,cAAc,CAACG,OAAtB,KAAkC,SAAlE,CAX4B,CAa5B;;AACA,MAAID,uBAAJ,EAA6B;AAC3B,WAAOF,cAAc,CAACG,OAAf,GAAyB,MAAzB,GAAkC,OAAzC;AACD,GAhB2B,CAkB5B;;;AACA,SAAO,OAAP;AACD,CApBD;;AAsBA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,QAAD,EAAc;AAC7B;AACAR,EAAAA,YAAY,CAACS,OAAb,CAAqB,OAArB,EAA8BD,QAA9B,EAF6B,CAI7B;;AACA,MAAIA,QAAQ,KAAK,MAAjB,EAAyB;AACvBZ,IAAAA,MAAM,CAACc,OAAP,GAAiB,IAAjB;AACD,GAFD,MAEO;AACLd,IAAAA,MAAM,CAACc,OAAP,GAAiB,KAAjB;AACD;;AAED,MAAMC,YAAY,GAAGH,QAAQ,KAAK,OAAb,GAAuBlB,YAAvB,GAA+BC,WAApD,CAX6B,CAa7B;;AACA,qCAA2BqB,MAAM,CAACC,OAAP,CAAeF,YAAf,CAA3B,qCAAyD;AAAA;AAAA,QAA7CG,GAA6C;AAAA,QAAxCC,KAAwC;;AACvDvB,IAAAA,IAAI,CAACwB,KAAL,CAAWC,WAAX,CAAuBH,GAAvB,EAA4BC,KAA5B;AACD;AACF,CAjBD;;AAmBAR,QAAQ,CAACT,eAAe,EAAhB,CAAR;AAEAF,MAAM,CAACsB,gBAAP,CAAwB,QAAxB,EAAkC,UAACC,EAAD;AAAA,SAAQZ,QAAQ,CAACY,EAAE,CAACC,MAAH,CAAUV,OAAV,GAAoB,MAApB,GAA6B,OAA9B,CAAhB;AAAA,CAAlC","file":"script.a6e1fada.js","sourceRoot":"..\\src","sourcesContent":["const light = {\n  '--toggle-bg': 'hsl(230, 22%, 74%)',\n  '--toggle-dot': 'hsl(0, 0%, 100%)',\n  '--background': 'hsl(0, 0%, 100%)',\n  '--background-top': 'hsl(225, 100%, 98%)',\n  '--card-bg': 'hsl(227, 47%, 96%)',\n  '--text-secondary': 'hsl(228, 12%, 44%)',\n  '--text-primary': 'hsl(230, 17%, 14%)',\n  '--card-bg-hover': 'hsl(232, 33%, 91%)',\n};\n\nconst dark = {\n  '--toggle-bg': 'linear-gradient(to right, hsl(210, 78%, 56%), hsl(146, 68%, 55%))',\n  '--toggle-dot': 'hsl(232, 19%, 15%)',\n  '--background': 'hsl(230, 17%, 14%)',\n  '--background-top': 'hsl(232, 19%, 15%)',\n  '--card-bg': 'hsl(229, 27%, 20%)',\n  '--text-secondary': 'hsl(228, 34%, 66%)',\n  '--text-primary': 'hsl(0, 0%, 100%)',\n  '--card-bg-hover': 'hsl(228, 26%, 27%)',\n};\n\nexport { light, dark };\n","import { light, dark } from './theme';\r\n\r\nconst root = window.document.documentElement;\r\nconst toggle = document.querySelector('#toggle');\r\n\r\nconst getInitialTheme = () => {\r\n  // use theme saved in local storage\r\n  const persistedTheme = window.localStorage.getItem('theme');\r\n  const hasPersistedPreference = typeof persistedTheme === 'string';\r\n\r\n  if (hasPersistedPreference) {\r\n    return persistedTheme;\r\n  }\r\n\r\n  // check if users browser/system supports this media query\r\n  const mediaQueryList = window.matchMedia('(prefers-color-scheme: dark)');\r\n  const hasMediaQueryPreference = typeof mediaQueryList.matches === 'boolean';\r\n\r\n  // use theme preferred by used\r\n  if (hasMediaQueryPreference) {\r\n    return mediaQueryList.matches ? 'dark' : 'light';\r\n  }\r\n\r\n  // use default theme\r\n  return 'light';\r\n};\r\n\r\nconst setTheme = (newTheme) => {\r\n  // update theme in local storage\r\n  localStorage.setItem('theme', newTheme);\r\n\r\n  // update theme toggle state\r\n  if (newTheme === 'dark') {\r\n    toggle.checked = true;\r\n  } else {\r\n    toggle.checked = false;\r\n  }\r\n\r\n  const currentTheme = newTheme === 'light' ? light : dark;\r\n\r\n  // change CSS variables according to theme\r\n  for (const [key, value] of Object.entries(currentTheme)) {\r\n    root.style.setProperty(key, value);\r\n  }\r\n};\r\n\r\nsetTheme(getInitialTheme());\r\n\r\ntoggle.addEventListener('change', (ev) => setTheme(ev.target.checked ? 'dark' : 'light'));\r\n"]}