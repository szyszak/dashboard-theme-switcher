{"version":3,"sources":["scripts/theme.js","scripts/script.js"],"names":["light","dark","root","window","document","documentElement","toggle","querySelector","getInitialTheme","persistedTheme","localStorage","getItem","hasPersistedPreference","mediaQueryList","matchMedia","hasMediaQueryPreference","matches","setTheme","newTheme","setItem","checked","Object","currentTheme","entries","key","value","style","setProperty","addEventListener","ev","target"],"mappings":";AAWA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,KAAA,QAAA,WAAA,EAXA,IAAMA,EAAQ,CACG,cAAA,qBACC,eAAA,mBACA,eAAA,mBACI,mBAAA,sBACP,YAAA,qBACO,mBAAA,qBACF,iBAAA,qBACC,kBAAA,sBAGrB,QAAA,MAAA,EAAA,IAAMC,EAAO,CACI,cAAA,oEACC,eAAA,qBACA,eAAA,qBACI,mBAAA,qBACP,YAAA,qBACO,mBAAA,qBACF,iBAAA,mBACC,kBAAA,sBARrB,QAAA,KAAA;;ACqCA,aAhDA,IAAA,EAAA,QAAA,WAgDA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,6IAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,CAAA,IAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,OAAA,EAAA,IAAA,IAAA,IAAA,EAAA,EAAA,EAAA,OAAA,cAAA,GAAA,EAAA,EAAA,QAAA,QAAA,EAAA,KAAA,EAAA,QAAA,GAAA,EAAA,SAAA,GAAA,GAAA,IAAA,MAAA,GAAA,GAAA,EAAA,EAAA,EAAA,QAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,GAAA,OAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EA9CA,IAAMC,EAAOC,OAAOC,SAASC,gBACvBC,EAASF,SAASG,cAAc,WAEhCC,EAAkB,WAEhBC,IAAAA,EAAiBN,OAAOO,aAAaC,QAAQ,SAG/CC,GAFqD,iBAAnBH,EAG7BA,OAAAA,EAIHI,IAAAA,EAAiBV,OAAOW,WAAW,gCAIrCC,MAH8D,kBAA3BF,EAAeG,SAI7CH,EAAeG,QAAU,OAI3B,SAGHC,EAAW,SAACC,GAEhBR,aAAaS,QAAQ,QAASD,GAI5BZ,EAAOc,QADQ,SAAbF,EASuBG,IAHrBC,IAAAA,EAA4B,UAAbJ,EAAuBlB,EAAvB,MAA+BC,EAApD,KAG2BoB,EAAAA,EAAAA,EAAAA,OAAOE,QAAQD,GAAe,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,GAAA,GAA7CE,EAA6C,EAAA,GAAxCC,EAAwC,EAAA,GACvDvB,EAAKwB,MAAMC,YAAYH,EAAKC,KAIhCR,EAAST,KAETF,EAAOsB,iBAAiB,SAAU,SAACC,GAAOZ,OAAAA,EAASY,EAAGC,OAAOV,QAAU,OAAS","file":"script.c90bb40a.js","sourceRoot":"..\\src","sourcesContent":["const light = {\n  '--toggle-bg': 'hsl(230, 22%, 74%)',\n  '--toggle-dot': 'hsl(0, 0%, 100%)',\n  '--background': 'hsl(0, 0%, 100%)',\n  '--background-top': 'hsl(225, 100%, 98%)',\n  '--card-bg': 'hsl(227, 47%, 96%)',\n  '--text-secondary': 'hsl(228, 12%, 44%)',\n  '--text-primary': 'hsl(230, 17%, 14%)',\n  '--card-bg-hover': 'hsl(232, 33%, 91%)',\n};\n\nconst dark = {\n  '--toggle-bg': 'linear-gradient(to right, hsl(210, 78%, 56%), hsl(146, 68%, 55%))',\n  '--toggle-dot': 'hsl(232, 19%, 15%)',\n  '--background': 'hsl(230, 17%, 14%)',\n  '--background-top': 'hsl(232, 19%, 15%)',\n  '--card-bg': 'hsl(229, 27%, 20%)',\n  '--text-secondary': 'hsl(228, 34%, 66%)',\n  '--text-primary': 'hsl(0, 0%, 100%)',\n  '--card-bg-hover': 'hsl(228, 26%, 27%)',\n};\n\nexport { light, dark };\n","import { light, dark } from './theme';\r\n\r\nconst root = window.document.documentElement;\r\nconst toggle = document.querySelector('#toggle');\r\n\r\nconst getInitialTheme = () => {\r\n  // use theme saved in local storage\r\n  const persistedTheme = window.localStorage.getItem('theme');\r\n  const hasPersistedPreference = typeof persistedTheme === 'string';\r\n\r\n  if (hasPersistedPreference) {\r\n    return persistedTheme;\r\n  }\r\n\r\n  // check if users browser/system supports this media query\r\n  const mediaQueryList = window.matchMedia('(prefers-color-scheme: dark)');\r\n  const hasMediaQueryPreference = typeof mediaQueryList.matches === 'boolean';\r\n\r\n  // use theme preferred by used\r\n  if (hasMediaQueryPreference) {\r\n    return mediaQueryList.matches ? 'dark' : 'light';\r\n  }\r\n\r\n  // use default theme\r\n  return 'light';\r\n};\r\n\r\nconst setTheme = (newTheme) => {\r\n  // update theme in local storage\r\n  localStorage.setItem('theme', newTheme);\r\n\r\n  // update theme toggle state\r\n  if (newTheme === 'dark') {\r\n    toggle.checked = true;\r\n  } else {\r\n    toggle.checked = false;\r\n  }\r\n\r\n  const currentTheme = newTheme === 'light' ? light : dark;\r\n\r\n  // change CSS variables according to theme\r\n  for (const [key, value] of Object.entries(currentTheme)) {\r\n    root.style.setProperty(key, value);\r\n  }\r\n};\r\n\r\nsetTheme(getInitialTheme());\r\n\r\ntoggle.addEventListener('change', (ev) => setTheme(ev.target.checked ? 'dark' : 'light'));\r\n"]}